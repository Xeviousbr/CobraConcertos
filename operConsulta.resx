<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>