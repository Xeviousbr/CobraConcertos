<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>